failed: [localhost] (item=apiVersion: v1
kind: ConfigMap
metadata:
  name: awx-config
  namespace: awx
data:
  awx_nginx_conf: |
    #user awx;

    worker_processes  1;

    pid        /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        server_tokens off;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /dev/stdout main;

        map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }

        sendfile        on;
        #tcp_nopush     on;
        #gzip  on;

        upstream uwsgi {
            server 127.0.0.1:8050;
            }

        upstream daphne {
            server 127.0.0.1:8051;
        }


        server {
                        listen 8052 default_server;

            # If you have a domain name, this is where to add it
            server_name _;
            keepalive_timeout 65;

            # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
            add_header Strict-Transport-Security max-age=15768000;
            add_header Content-Security-Policy "default-src 'self'; connect-src *; font-src *; frame-src *; img-src * data:; media-src *; object-src *; script-src * 'unsafe-inline' 'unsafe-eval'; style-src * 'unsafe-inline';";
            #add_header Content-Security-Policy "default-src 'self'; connect-src 'self' ws: wss:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' *.pendo.io; img-src 'self' *.pendo.io data:; report-uri /csp-violation/";
            add_header X-Content-Security-Policy "default-src 'self'; connect-src 'self' ws: wss:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' *.pendo.io; img-src 'self' *.pendo.io data:; report-uri /csp-violation/";

            # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)
            add_header X-Frame-Options "DENY";

            location /nginx_status {
              stub_status on;
              access_log off;
              allow 127.0.0.1;
              deny all;
            }

            location /static/ {
                alias /var/lib/awx/public/static/;
            }

            location /favicon.ico { alias /var/lib/awx/public/static/favicon.ico; }

            location /websocket {
                # Pass request to the upstream alias
                proxy_pass http://daphne;
                # Require http version 1.1 to allow for upgrade requests
                proxy_http_version 1.1;
                # We want proxy_buffering off for proxying to websockets.
                proxy_buffering off;
                # http://en.wikipedia.org/wiki/X-Forwarded-For
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                # enable this if you use HTTPS:
                proxy_set_header X-Forwarded-Proto https;
                # pass the Host: header from the client for the sake of redirects
                proxy_set_header Host $http_host;
                # We've set the Host header, so we don't need Nginx to muddle
                # about with redirects
                proxy_redirect off;
                # Depending on the request value, set the Upgrade and
                # connection headers
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
            }

            location / {
                # Add trailing / if missing
                rewrite ^(.*)$http_host(.*[^/])$ $1$http_host$2/ permanent;
                uwsgi_read_timeout 120s;
                uwsgi_pass uwsgi;
                include /etc/nginx/uwsgi_params;                proxy_set_header X-Forwarded-Port 443;
            }
        }
    }

  awx_settings: |
    import os
    import socket
    ADMINS = ()

    AWX_PROOT_ENABLED = True

    # Automatically deprovision pods that go offline
    AWX_AUTO_DEPROVISION_INSTANCES = True

    SYSTEM_TASK_ABS_CPU = 6
    SYSTEM_TASK_ABS_MEM = 20

    INSIGHTS_URL_BASE = "https://example.org"
    INSIGHTS_AGENT_MIME = "application/vnd.redhat.tower.analytics+tgz"
    AUTOMATION_ANALYTICS_URL = 'https://cloud.redhat.com/api/ingress/v1/upload'

    #Autoprovisioning should replace this
    CLUSTER_HOST_ID = socket.gethostname()
    SYSTEM_UUID = '00000000-0000-0000-0000-000000000000'

    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

    REMOTE_HOST_HEADERS = ['HTTP_X_FORWARDED_FOR']

    STATIC_ROOT = '/var/lib/awx/public/static'
    PROJECTS_ROOT = '/var/lib/awx/projects'
    JOBOUTPUT_ROOT = '/var/lib/awx/job_status'
    SECRET_KEY = open('/etc/tower/SECRET_KEY', 'rb').read().strip()
    ALLOWED_HOSTS = ['*']
    INTERNAL_API_URL = 'http://127.0.0.1:8052'
    SERVER_EMAIL = 'root@localhost'
    DEFAULT_FROM_EMAIL = 'webmaster@localhost'
    EMAIL_SUBJECT_PREFIX = '[AWX] '
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 25
    EMAIL_HOST_USER = ''
    EMAIL_HOST_PASSWORD = ''
    EMAIL_USE_TLS = False

    LOGGING['handlers']['console'] = {
        '()': 'logging.StreamHandler',
        'level': 'DEBUG',
        'formatter': 'simple',
    }

    LOGGING['loggers']['django.request']['handlers'] = ['console']
    LOGGING['loggers']['rest_framework.request']['handlers'] = ['console']
    LOGGING['loggers']['awx']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.commands.run_callback_receiver']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.commands.inventory_import']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.tasks']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.scheduler']['handlers'] = ['console']
    LOGGING['loggers']['django_auth_ldap']['handlers'] = ['console']
    LOGGING['loggers']['social']['handlers'] = ['console']
    LOGGING['loggers']['system_tracking_migrations']['handlers'] = ['console']
    LOGGING['loggers']['rbac_migrations']['handlers'] = ['console']
    LOGGING['loggers']['awx.isolated.manager.playbooks']['handlers'] = ['console']
    LOGGING['handlers']['callback_receiver'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['fact_receiver'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['task_system'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['tower_warnings'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['rbac_migrations'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['system_tracking_migrations'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['management_playbooks'] = {'class': 'logging.NullHandler'}

    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': '{}:{}'.format("localhost", "11211")
        },
        'ephemeral': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        },
    }

    USE_X_FORWARDED_PORT = True

    AWX_CONTAINER_GROUP_DEFAULT_IMAGE = "ansible/ansible-runner"
) => {"ansible_loop_var": "item", "changed": true, "cmd": "echo 'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: awx-config\n  namespace: awx\ndata:\n  awx_nginx_conf: |\n    #user awx;\n\n    worker_processes  1;\n\n    pid        /tmp/nginx.pid;\n\n    events {\n        worker_connections  1024;\n    }\n\n    http {\n        include       /etc/nginx/mime.types;\n        default_type  application/octet-stream;\n        server_tokens off;\n\n        log_format  main  '\"'\"'$remote_addr - $remote_user [$time_local] \"$request\" '\"'\"'\n                          '\"'\"'$status $body_bytes_sent \"$http_referer\" '\"'\"'\n                          '\"'\"'\"$http_user_agent\" \"$http_x_forwarded_for\"'\"'\"';\n\n        access_log /dev/stdout main;\n\n        map $http_upgrade $connection_upgrade {\n            default upgrade;\n            '\"'\"''\"'\"'      close;\n        }\n\n        sendfile        on;\n        #tcp_nopush     on;\n        #gzip  on;\n\n        upstream uwsgi {\n            server 127.0.0.1:8050;\n            }\n\n        upstream daphne {\n            server 127.0.0.1:8051;\n        }\n\n        \n        server {\n                        listen 8052 default_server;\n            \n            # If you have a domain name, this is where to add it\n            server_name _;\n            keepalive_timeout 65;\n\n            # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)\n            add_header Strict-Transport-Security max-age=15768000;\n\t    add_header Content-Security-Policy \"default-src '\"'\"'self'\"'\"'; connect-src *; font-src *; frame-src *; img-src * data:; media-src *; object-src *; script-src * '\"'\"'unsafe-inline'\"'\"' '\"'\"'unsafe-eval'\"'\"'; style-src * '\"'\"'unsafe-inline'\"'\"';\";\n            #add_header Content-Security-Policy \"default-src '\"'\"'self'\"'\"'; connect-src '\"'\"'self'\"'\"' ws: wss:; style-src '\"'\"'self'\"'\"' '\"'\"'unsafe-inline'\"'\"'; script-src '\"'\"'self'\"'\"' '\"'\"'unsafe-inline'\"'\"' *.pendo.io; img-src '\"'\"'self'\"'\"' *.pendo.io data:; report-uri /csp-violation/\";\n            add_header X-Content-Security-Policy \"default-src '\"'\"'self'\"'\"'; connect-src '\"'\"'self'\"'\"' ws: wss:; style-src '\"'\"'self'\"'\"' '\"'\"'unsafe-inline'\"'\"'; script-src '\"'\"'self'\"'\"' '\"'\"'unsafe-inline'\"'\"' *.pendo.io; img-src '\"'\"'self'\"'\"' *.pendo.io data:; report-uri /csp-violation/\";\n\n            # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)\n            add_header X-Frame-Options \"DENY\";\n\n            location /nginx_status {\n              stub_status on;\n              access_log off;\n              allow 127.0.0.1;\n              deny all;\n            }\n\n            location /static/ {\n                alias /var/lib/awx/public/static/;\n            }\n\n            location /favicon.ico { alias /var/lib/awx/public/static/favicon.ico; }\n\n            location /websocket {\n                # Pass request to the upstream alias\n                proxy_pass http://daphne;\n                # Require http version 1.1 to allow for upgrade requests\n                proxy_http_version 1.1;\n                # We want proxy_buffering off for proxying to websockets.\n                proxy_buffering off;\n                # http://en.wikipedia.org/wiki/X-Forwarded-For\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                # enable this if you use HTTPS:\n                proxy_set_header X-Forwarded-Proto https;\n                # pass the Host: header from the client for the sake of redirects\n                proxy_set_header Host $http_host;\n                # We'\"'\"'ve set the Host header, so we don'\"'\"'t need Nginx to muddle\n                # about with redirects\n                proxy_redirect off;\n                # Depending on the request value, set the Upgrade and\n                # connection headers\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection $connection_upgrade;\n            }\n\n            location / {\n                # Add trailing / if missing\n                rewrite ^(.*)$http_host(.*[^/])$ $1$http_host$2/ permanent;\n                uwsgi_read_timeout 120s;\n                uwsgi_pass uwsgi;\n                include /etc/nginx/uwsgi_params;                proxy_set_header X-Forwarded-Port 443;\n            }\n        }\n    }\n\n  awx_settings: |\n    import os\n    import socket\n    ADMINS = ()\n\n    AWX_PROOT_ENABLED = True\n\n    # Automatically deprovision pods that go offline\n    AWX_AUTO_DEPROVISION_INSTANCES = True\n\n    SYSTEM_TASK_ABS_CPU = 6\n    SYSTEM_TASK_ABS_MEM = 20\n\n    INSIGHTS_URL_BASE = \"https://example.org\"\n    INSIGHTS_AGENT_MIME = \"application/vnd.redhat.tower.analytics+tgz\"\n    AUTOMATION_ANALYTICS_URL = '\"'\"'https://cloud.redhat.com/api/ingress/v1/upload'\"'\"'\n\n    #Autoprovisioning should replace this\n    CLUSTER_HOST_ID = socket.gethostname()\n    SYSTEM_UUID = '\"'\"'00000000-0000-0000-0000-000000000000'\"'\"'\n\n    SESSION_COOKIE_SECURE = False\n    CSRF_COOKIE_SECURE = False\n\n    REMOTE_HOST_HEADERS = ['\"'\"'HTTP_X_FORWARDED_FOR'\"'\"']\n\n    STATIC_ROOT = '\"'\"'/var/lib/awx/public/static'\"'\"'\n    PROJECTS_ROOT = '\"'\"'/var/lib/awx/projects'\"'\"'\n    JOBOUTPUT_ROOT = '\"'\"'/var/lib/awx/job_status'\"'\"'\n    SECRET_KEY = open('\"'\"'/etc/tower/SECRET_KEY'\"'\"', '\"'\"'rb'\"'\"').read().strip()\n    ALLOWED_HOSTS = ['\"'\"'*'\"'\"']\n    INTERNAL_API_URL = '\"'\"'http://127.0.0.1:8052'\"'\"'\n    SERVER_EMAIL = '\"'\"'root@localhost'\"'\"'\n    DEFAULT_FROM_EMAIL = '\"'\"'webmaster@localhost'\"'\"'\n    EMAIL_SUBJECT_PREFIX = '\"'\"'[AWX] '\"'\"'\n    EMAIL_HOST = '\"'\"'localhost'\"'\"'\n    EMAIL_PORT = 25\n    EMAIL_HOST_USER = '\"'\"''\"'\"'\n    EMAIL_HOST_PASSWORD = '\"'\"''\"'\"'\n    EMAIL_USE_TLS = False\n\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'console'\"'\"'] = {\n        '\"'\"'()'\"'\"': '\"'\"'logging.StreamHandler'\"'\"',\n        '\"'\"'level'\"'\"': '\"'\"'DEBUG'\"'\"',\n        '\"'\"'formatter'\"'\"': '\"'\"'simple'\"'\"',\n    }\n\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'django.request'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'rest_framework.request'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx.main.commands.run_callback_receiver'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx.main.commands.inventory_import'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx.main.tasks'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx.main.scheduler'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'django_auth_ldap'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'social'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'system_tracking_migrations'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'rbac_migrations'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'loggers'\"'\"']['\"'\"'awx.isolated.manager.playbooks'\"'\"']['\"'\"'handlers'\"'\"'] = ['\"'\"'console'\"'\"']\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'callback_receiver'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'fact_receiver'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'task_system'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'tower_warnings'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'rbac_migrations'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'system_tracking_migrations'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n    LOGGING['\"'\"'handlers'\"'\"']['\"'\"'management_playbooks'\"'\"'] = {'\"'\"'class'\"'\"': '\"'\"'logging.NullHandler'\"'\"'}\n\n    CACHES = {\n        '\"'\"'default'\"'\"': {\n            '\"'\"'BACKEND'\"'\"': '\"'\"'django.core.cache.backends.memcached.MemcachedCache'\"'\"',\n            '\"'\"'LOCATION'\"'\"': '\"'\"'{}:{}'\"'\"'.format(\"localhost\", \"11211\")\n        },\n        '\"'\"'ephemeral'\"'\"': {\n            '\"'\"'BACKEND'\"'\"': '\"'\"'django.core.cache.backends.locmem.LocMemCache'\"'\"',\n        },\n    }\n\n    USE_X_FORWARDED_PORT = True\n\n    AWX_CONTAINER_GROUP_DEFAULT_IMAGE = \"ansible/ansible-runner\"\n' | kubectl apply -f -\n", "delta": "0:00:00.199742", "end": "2020-10-29 11:58:39.755114", "item": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: awx-config\n  namespace: awx\ndata:\n  awx_nginx_conf: |\n    #user awx;\n\n    worker_processes  1;\n\n    pid        /tmp/nginx.pid;\n\n    events {\n        worker_connections  1024;\n    }\n\n    http {\n        include       /etc/nginx/mime.types;\n        default_type  application/octet-stream;\n        server_tokens off;\n\n        log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                          '$status $body_bytes_sent \"$http_referer\" '\n                          '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n        access_log /dev/stdout main;\n\n        map $http_upgrade $connection_upgrade {\n            default upgrade;\n            ''      close;\n        }\n\n        sendfile        on;\n        #tcp_nopush     on;\n        #gzip  on;\n\n        upstream uwsgi {\n            server 127.0.0.1:8050;\n            }\n\n        upstream daphne {\n            server 127.0.0.1:8051;\n        }\n\n        \n        server {\n                        listen 8052 default_server;\n            \n            # If you have a domain name, this is where to add it\n            server_name _;\n            keepalive_timeout 65;\n\n            # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)\n            add_header Strict-Transport-Security max-age=15768000;\n\t    add_header Content-Security-Policy \"default-src 'self'; connect-src *; font-src *; frame-src *; img-src * data:; media-src *; object-src *; script-src * 'unsafe-inline' 'unsafe-eval'; style-src * 'unsafe-inline';\";\n            #add_header Content-Security-Policy \"default-src 'self'; connect-src 'self' ws: wss:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' *.pendo.io; img-src 'self' *.pendo.io data:; report-uri /csp-violation/\";\n            add_header X-Content-Security-Policy \"default-src 'self'; connect-src 'self' ws: wss:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' *.pendo.io; img-src 'self' *.pendo.io data:; report-uri /csp-violation/\";\n\n            # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)\n            add_header X-Frame-Options \"DENY\";\n\n            location /nginx_status {\n              stub_status on;\n              access_log off;\n              allow 127.0.0.1;\n              deny all;\n            }\n\n            location /static/ {\n                alias /var/lib/awx/public/static/;\n            }\n\n            location /favicon.ico { alias /var/lib/awx/public/static/favicon.ico; }\n\n            location /websocket {\n                # Pass request to the upstream alias\n                proxy_pass http://daphne;\n                # Require http version 1.1 to allow for upgrade requests\n                proxy_http_version 1.1;\n                # We want proxy_buffering off for proxying to websockets.\n                proxy_buffering off;\n                # http://en.wikipedia.org/wiki/X-Forwarded-For\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                # enable this if you use HTTPS:\n                proxy_set_header X-Forwarded-Proto https;\n                # pass the Host: header from the client for the sake of redirects\n                proxy_set_header Host $http_host;\n                # We've set the Host header, so we don't need Nginx to muddle\n                # about with redirects\n                proxy_redirect off;\n                # Depending on the request value, set the Upgrade and\n                # connection headers\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection $connection_upgrade;\n            }\n\n            location / {\n                # Add trailing / if missing\n                rewrite ^(.*)$http_host(.*[^/])$ $1$http_host$2/ permanent;\n                uwsgi_read_timeout 120s;\n                uwsgi_pass uwsgi;\n                include /etc/nginx/uwsgi_params;                proxy_set_header X-Forwarded-Port 443;\n            }\n        }\n    }\n\n  awx_settings: |\n    import os\n    import socket\n    ADMINS = ()\n\n    AWX_PROOT_ENABLED = True\n\n    # Automatically deprovision pods that go offline\n    AWX_AUTO_DEPROVISION_INSTANCES = True\n\n    SYSTEM_TASK_ABS_CPU = 6\n    SYSTEM_TASK_ABS_MEM = 20\n\n    INSIGHTS_URL_BASE = \"https://example.org\"\n    INSIGHTS_AGENT_MIME = \"application/vnd.redhat.tower.analytics+tgz\"\n    AUTOMATION_ANALYTICS_URL = 'https://cloud.redhat.com/api/ingress/v1/upload'\n\n    #Autoprovisioning should replace this\n    CLUSTER_HOST_ID = socket.gethostname()\n    SYSTEM_UUID = '00000000-0000-0000-0000-000000000000'\n\n    SESSION_COOKIE_SECURE = False\n    CSRF_COOKIE_SECURE = False\n\n    REMOTE_HOST_HEADERS = ['HTTP_X_FORWARDED_FOR']\n\n    STATIC_ROOT = '/var/lib/awx/public/static'\n    PROJECTS_ROOT = '/var/lib/awx/projects'\n    JOBOUTPUT_ROOT = '/var/lib/awx/job_status'\n    SECRET_KEY = open('/etc/tower/SECRET_KEY', 'rb').read().strip()\n    ALLOWED_HOSTS = ['*']\n    INTERNAL_API_URL = 'http://127.0.0.1:8052'\n    SERVER_EMAIL = 'root@localhost'\n    DEFAULT_FROM_EMAIL = 'webmaster@localhost'\n    EMAIL_SUBJECT_PREFIX = '[AWX] '\n    EMAIL_HOST = 'localhost'\n    EMAIL_PORT = 25\n    EMAIL_HOST_USER = ''\n    EMAIL_HOST_PASSWORD = ''\n    EMAIL_USE_TLS = False\n\n    LOGGING['handlers']['console'] = {\n        '()': 'logging.StreamHandler',\n        'level': 'DEBUG',\n        'formatter': 'simple',\n    }\n\n    LOGGING['loggers']['django.request']['handlers'] = ['console']\n    LOGGING['loggers']['rest_framework.request']['handlers'] = ['console']\n    LOGGING['loggers']['awx']['handlers'] = ['console']\n    LOGGING['loggers']['awx.main.commands.run_callback_receiver']['handlers'] = ['console']\n    LOGGING['loggers']['awx.main.commands.inventory_import']['handlers'] = ['console']\n    LOGGING['loggers']['awx.main.tasks']['handlers'] = ['console']\n    LOGGING['loggers']['awx.main.scheduler']['handlers'] = ['console']\n    LOGGING['loggers']['django_auth_ldap']['handlers'] = ['console']\n    LOGGING['loggers']['social']['handlers'] = ['console']\n    LOGGING['loggers']['system_tracking_migrations']['handlers'] = ['console']\n    LOGGING['loggers']['rbac_migrations']['handlers'] = ['console']\n    LOGGING['loggers']['awx.isolated.manager.playbooks']['handlers'] = ['console']\n    LOGGING['handlers']['callback_receiver'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['fact_receiver'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['task_system'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['tower_warnings'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['rbac_migrations'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['system_tracking_migrations'] = {'class': 'logging.NullHandler'}\n    LOGGING['handlers']['management_playbooks'] = {'class': 'logging.NullHandler'}\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n            'LOCATION': '{}:{}'.format(\"localhost\", \"11211\")\n        },\n        'ephemeral': {\n            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n        },\n    }\n\n    USE_X_FORWARDED_PORT = True\n\n    AWX_CONTAINER_GROUP_DEFAULT_IMAGE = \"ansible/ansible-runner\"\n", "msg": "non-zero return code", "rc": 1, "start": "2020-10-29 11:58:39.555372", "stderr": "error: error parsing STDIN: error converting YAML to JSON: yaml: line 56: found a tab character where an indentation space is expected", "stderr_lines": ["error: error parsing STDIN: error converting YAML to JSON: yaml: line 56: found a tab character where an indentation space is expected"], "stdout": "", "stdout_lines": []}
